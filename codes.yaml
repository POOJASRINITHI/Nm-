myapp/
├── server.js
├── package.json
├── Dockerfile
├── deployment.yaml
└── service.yaml
const http = require('http');
const PORT = 3000;

const server = http.createServer((req, res) => {
  res.end('Hello from your Dockerized Node.js app on Kubernetes!');
});

server.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
{
  "name": "myapp",
  "version": "1.0.0",
  "main": "server.js",
  "scripts": {
    "start": "node server.js"
  },
  "dependencies": {}
}
FROM node:18-alpine

WORKDIR /app

COPY package.json .
RUN npm install

COPY . .

EXPOSE 3000
CMD ["npm", "start"]
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
        - name: myapp
          image: myapp:1.0
          ports:
            - containerPort: 3000
apiVersion: v1
kind: Service
metadata:
  name: myapp-service
spec:
  selector:
    app: myapp
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: NodePort
